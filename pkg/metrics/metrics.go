/*
 * Veritone Build and Release API
 *
 * Build and release API for Veritone
 *
 * API version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package metrics

import (
	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_golang/prometheus/promauto"
)

var (
	/*cpuTemp = prometheus.NewGauge(prometheus.GaugeOpts{
		Name: "cpu_temperature_celsius",
		Help: "Current temperature of the CPU.",
	})*/
	metrics *Metrics
)

// Metrics is the handler processing all individual scan metrics
type Metrics struct {
	//scanned prometheus.Gauge
	databaseError *prometheus.CounterVec
}

// Default creates a new metrics handler if none exists, otherwise returns the existing one
func Default() *Metrics {
	if metrics != nil {
		return metrics
	}

	metrics = &Metrics{
		databaseError: promauto.NewCounterVec(
			prometheus.CounterOpts{
				Name: "database_error_total",
				Help: "Number of database errors.",
			},
			[]string{"database"},
		),
	}

	return metrics
}
